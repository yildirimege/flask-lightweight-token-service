version : '3'

services:
  app:
    build:
      dockerfile: Dockerfile_app

    environment:
      POSTGRESQL_USERNAME: ${POSTGRESQL_USERNAME}
      POSTGRESQL_PASSWORD: ${POSTGRESQL_PASSWORD}
      POSTGRESQL_DB_NAME: ${POSTGRESQL_DB_NAME}
      POSTGRESQL_HOST: ${POSTGRESQL_HOST}
      POSTGRESQL_DB_PORT: ${POSTGRESQL_DB_PORT}
      TOKEN_EXPIRATION_TIME: ${TOKEN_EXPIRATION_TIME}
      TOKEN_CLEAR_FREQUENCY: ${TOKEN_CLEAR_FREQUENCY}
      POSTGRESQL_SSL_MODE: ${POSTGRESQL_SSL_MODE}

    ports:
      - ${BACKEND_APP_PORT}:${BACKEND_APP_PORT}
    depends_on:
      - postgres_db

  postgres_db:
    environment:
      POSTGRESQL_USERNAME: ${POSTGRESQL_USERNAME}
      POSTGRESQL_PASSWORD: ${POSTGRESQL_PASSWORD}
      POSTGRESQL_DB_NAME: ${POSTGRESQL_DB_NAME}
      POSTGRESQL_HOST: ${POSTGRESQL_HOST}
      POSTGRESQL_DB_PORT: ${POSTGRESQL_DB_PORT}
      TOKEN_EXPIRATION_TIME: ${TOKEN_EXPIRATION_TIME}
      TOKEN_CLEAR_FREQUENCY: ${TOKEN_CLEAR_FREQUENCY}
      POSTGRESQL_SSL_MODE: ${POSTGRESQL_SSL_MODE}

    image: postgres:13
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      -  ${POSTGRESQL_DB_PORT}:${POSTGRESQL_DB_PORT}

  token_clearer:
    environment:
      POSTGRESQL_USERNAME: ${POSTGRESQL_USERNAME}
      POSTGRESQL_PASSWORD: ${POSTGRESQL_PASSWORD}
      POSTGRESQL_DB_NAME: ${POSTGRESQL_DB_NAME}
      POSTGRESQL_HOST: ${POSTGRESQL_HOST}
      POSTGRESQL_DB_PORT: ${POSTGRESQL_DB_PORT}
      TOKEN_EXPIRATION_TIME: ${TOKEN_EXPIRATION_TIME}
      TOKEN_CLEAR_FREQUENCY: ${TOKEN_CLEAR_FREQUENCY}
      POSTGRESQL_SSL_MODE: ${POSTGRESQL_SSL_MODE}
    build:
      context: .
      dockerfile: Dockerfile_token_clearer
    depends_on:
      - postgres_db
    volumes:
      - ./utils:/app/utils
    command: ["python", "token_clearer.py"]  # Run the token_clearer.py script

volumes:
  db_data:
