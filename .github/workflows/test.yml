name: Build & Unit Tests

on: [push]

env:
  POSTGRESQL_USERNAME: yildirimege
  POSTGRESQL_PASSWORD: 123456
  POSTGRESQL_DB_NAME: POSTGRES
  POSTGRESQL_HOST: LOCALHOST
  POSTGRESQL_DB_PORT: 5432
  TOKEN_EXPIRATION_TIME: 60
  TOKEN_CLEAR_FREQUENCY: 60
  LOG_LEVEL: DEBUG
  POSTGRESQL_SSL_MODE: require
  BACKEND_APP_PORT: 8080


jobs:
  set_environment_variables_and_start_containers:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up Docker Compose
      run: sudo apt-get update && sudo apt-get install -y docker-compose

    - name: Validate Docker Compose Configuration
      run: docker-compose config

    - name: Start Docker containers and Check Their Status
      run: |
        docker-compose up --build -d

        docker-compose ps
        
        
        if docker-compose ps | grep -q "flask-lightweight-token-service_postgres_db_1.*Up"; then
          echo "flask-lightweight-token-service_postgres_db_1 is running"
        else
          echo "flask-lightweight-token-service_postgres_db_1 is not running"
          exit 1
        fi
        
        if docker-compose ps | grep -q "flask-lightweight-token-service_app_1.*Up"; then
          echo "flask-lightweight-token-service_app_1 is running"
        else
          echo "flask-lightweight-token-service_app_1 is not running"
          exit 1
        fi

        if docker-compose ps | grep -q "flask-lightweight-token-service_token_clearer-1.*Up"; then
          echo "flask-lightweight-token-service_token_clearer-1 is running"
        else
          echo "flask-lightweight-token-service_token_clearer-1 is not running"
          exit 1
        fi



  test:
    runs-on: ubuntu-latest
    needs: set_environment_variables_and_start_containers

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.11

    - name: Install dependencies
      run: pip install -r requirements.txt

    - name: Run unit tests
      run: python -m unittest discover -s unit_tests -p 'TokenAuthTests.py'